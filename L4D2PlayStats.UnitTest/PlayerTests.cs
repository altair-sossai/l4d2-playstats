using L4D2PlayStats.Enums;
using L4D2PlayStats.Extensions;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace L4D2PlayStats.UnitTest;

[TestClass]
public class PlayerTests
{
    [TestMethod]
    public void GivenValidLineShouldBeAbleToExtractValues()
    {
        const string line = "1;8;STEAM_1:0:15152893;0;58;0;0;0;20;0;0;2;0;0;2;0;0;0;16;0;0;0;0;0;0;20;4;2;0;1230;0;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;84;15;8;0;0;0;0;0;0;0;13;0;2;0;0;0;0;0;7;0;0;0;0;1;15;8;0;0;1675480206;1675480402;1675480206;1675480359;1675480206;1675480324;";

        var player = new Player(line);

        Assert.AreEqual(1, player.Index);
        Assert.AreEqual(8, player.Client);
        Assert.AreEqual("STEAM_1:0:15152893", player.SteamId);
        Assert.AreEqual("76561197990571514", player.CommunityId);
        Assert.AreEqual("[U:1:30305786]", player.Steam3);
        Assert.AreEqual("https://steamcommunity.com/profiles/76561197990571514", player.ProfileUrl);
        Assert.AreEqual(0, player.ShotsShotgun);
        Assert.AreEqual(58, player.ShotsSmg);
        Assert.AreEqual(0, player.ShotsSniper);
        Assert.AreEqual(0, player.ShotsPistol);
        Assert.AreEqual(0, player.HitsShotgun);
        Assert.AreEqual(20, player.HitsSmg);
        Assert.AreEqual(0, player.HitsSniper);
        Assert.AreEqual(0, player.HitsPistol);
        Assert.AreEqual(2, player.HeadshotsSmg);
        Assert.AreEqual(0, player.HeadshotsSniper);
        Assert.AreEqual(0, player.HeadshotsPistol);
        Assert.AreEqual(2, player.HeadshotsSiSmg);
        Assert.AreEqual(0, player.HeadshotsSiSniper);
        Assert.AreEqual(0, player.HeadshotsSiPistol);
        Assert.AreEqual(0, player.HitsSiShotgun);
        Assert.AreEqual(16, player.HitsSiSmg);
        Assert.AreEqual(0, player.HitsSiSniper);
        Assert.AreEqual(0, player.HitsSiPistol);
        Assert.AreEqual(0, player.HitsTankShotgun);
        Assert.AreEqual(0, player.HitsTankSmg);
        Assert.AreEqual(0, player.HitsTankSniper);
        Assert.AreEqual(0, player.HitsTankPistol);
        Assert.AreEqual(20, player.Common);
        Assert.AreEqual(4, player.CommonTankUp);
        Assert.AreEqual(2, player.SiKilled);
        Assert.AreEqual(0, player.SiKilledTankUp);
        Assert.AreEqual(1230, player.SiDamage);
        Assert.AreEqual(0, player.SiDamageTankUp);
        Assert.AreEqual(1, player.Incaps);
        Assert.AreEqual(1, player.Died);
        Assert.AreEqual(0, player.Skeets);
        Assert.AreEqual(0, player.SkeetsHurt);
        Assert.AreEqual(0, player.SkeetsMelee);
        Assert.AreEqual(0, player.Levels);
        Assert.AreEqual(0, player.LevelsHurt);
        Assert.AreEqual(0, player.Pops);
        Assert.AreEqual(0, player.Crowns);
        Assert.AreEqual(0, player.CrownsHurt);
        Assert.AreEqual(0, player.Shoves);
        Assert.AreEqual(0, player.DeadStops);
        Assert.AreEqual(0, player.TongueCuts);
        Assert.AreEqual(0, player.SelfClears);
        Assert.AreEqual(0, player.FallDamage);
        Assert.AreEqual(84, player.DmgTaken);
        Assert.AreEqual(15, player.FfGiven);
        Assert.AreEqual(8, player.FfTaken);
        Assert.AreEqual(0, player.FfHits);
        Assert.AreEqual(0, player.TankDamage);
        Assert.AreEqual(0, player.WitchDamage);
        Assert.AreEqual(0, player.MeleesOnTank);
        Assert.AreEqual(0, player.RockSkeets);
        Assert.AreEqual(0, player.RockEats);
        Assert.AreEqual(0, player.FfGivenPellet);
        Assert.AreEqual(13, player.FfGivenBullet);
        Assert.AreEqual(0, player.FfGivenSniper);
        Assert.AreEqual(2, player.FfGivenMelee);
        Assert.AreEqual(0, player.FfGivenFire);
        Assert.AreEqual(0, player.FfGivenIncap);
        Assert.AreEqual(0, player.FfGivenOther);
        Assert.AreEqual(0, player.FfGivenSelf);
        Assert.AreEqual(0, player.FfTakenPellet);
        Assert.AreEqual(7, player.FfTakenBullet);
        Assert.AreEqual(0, player.FfTakenSniper);
        Assert.AreEqual(0, player.FfTakenMelee);
        Assert.AreEqual(0, player.FfTakenFire);
        Assert.AreEqual(0, player.FfTakenIncap);
        Assert.AreEqual(1, player.FfTakenOther);
        Assert.AreEqual(15, player.FfGivenTotal);
        Assert.AreEqual(8, player.FfTakenTotal);
        Assert.AreEqual(0, player.Clears);
        Assert.AreEqual(0, player.AvgClearTime);
        Assert.AreEqual(new DateTime(2023, 2, 4, 3, 10, 6, DateTimeKind.Utc), player.TimeStartPresent);
        Assert.AreEqual(new DateTime(2023, 2, 4, 3, 13, 22, DateTimeKind.Utc), player.TimeStopPresent);
        Assert.AreEqual(new TimeSpan(0, 3, 16), player.TimePresentElapsed);
        Assert.AreEqual(new DateTime(2023, 2, 4, 3, 10, 6, DateTimeKind.Utc), player.TimeStartAlive);
        Assert.AreEqual(new DateTime(2023, 2, 4, 3, 12, 39, DateTimeKind.Utc), player.TimeStopAlive);
        Assert.AreEqual(new TimeSpan(0, 2, 33), player.TimeAliveElapsed);
        Assert.AreEqual(new DateTime(2023, 2, 4, 3, 10, 6, DateTimeKind.Utc), player.TimeStartUpright);
        Assert.AreEqual(new DateTime(2023, 2, 4, 3, 12, 4, DateTimeKind.Utc), player.TimeStopUpright);
        Assert.AreEqual(new TimeSpan(0, 1, 58), player.TimeUprightElapsed);

        Assert.AreEqual(player.ShotsShotgun, player[PlayerStats.ShotsShotgun]);
        Assert.AreEqual(player.ShotsSmg, player[PlayerStats.ShotsSmg]);
        Assert.AreEqual(player.ShotsSniper, player[PlayerStats.ShotsSniper]);
        Assert.AreEqual(player.ShotsPistol, player[PlayerStats.ShotsPistol]);
        Assert.AreEqual(player.HitsShotgun, player[PlayerStats.HitsShotgun]);
        Assert.AreEqual(player.HitsSmg, player[PlayerStats.HitsSmg]);
        Assert.AreEqual(player.HitsSniper, player[PlayerStats.HitsSniper]);
        Assert.AreEqual(player.HitsPistol, player[PlayerStats.HitsPistol]);
        Assert.AreEqual(player.HeadshotsSmg, player[PlayerStats.HeadshotsSmg]);
        Assert.AreEqual(player.HeadshotsSniper, player[PlayerStats.HeadshotsSniper]);
        Assert.AreEqual(player.HeadshotsPistol, player[PlayerStats.HeadshotsPistol]);
        Assert.AreEqual(player.HeadshotsSiSmg, player[PlayerStats.HeadshotsSiSmg]);
        Assert.AreEqual(player.HeadshotsSiSniper, player[PlayerStats.HeadshotsSiSniper]);
        Assert.AreEqual(player.HeadshotsSiPistol, player[PlayerStats.HeadshotsSiPistol]);
        Assert.AreEqual(player.HitsSiShotgun, player[PlayerStats.HitsSiShotgun]);
        Assert.AreEqual(player.HitsSiSmg, player[PlayerStats.HitsSiSmg]);
        Assert.AreEqual(player.HitsSiSniper, player[PlayerStats.HitsSiSniper]);
        Assert.AreEqual(player.HitsSiPistol, player[PlayerStats.HitsSiPistol]);
        Assert.AreEqual(player.HitsTankShotgun, player[PlayerStats.HitsTankShotgun]);
        Assert.AreEqual(player.HitsTankSmg, player[PlayerStats.HitsTankSmg]);
        Assert.AreEqual(player.HitsTankSniper, player[PlayerStats.HitsTankSniper]);
        Assert.AreEqual(player.HitsTankPistol, player[PlayerStats.HitsTankPistol]);
        Assert.AreEqual(player.Common, player[PlayerStats.Common]);
        Assert.AreEqual(player.CommonTankUp, player[PlayerStats.CommonTankUp]);
        Assert.AreEqual(player.SiKilled, player[PlayerStats.SiKilled]);
        Assert.AreEqual(player.SiKilledTankUp, player[PlayerStats.SiKilledTankUp]);
        Assert.AreEqual(player.SiDamage, player[PlayerStats.SiDamage]);
        Assert.AreEqual(player.SiDamageTankUp, player[PlayerStats.SiDamageTankUp]);
        Assert.AreEqual(player.Incaps, player[PlayerStats.Incaps]);
        Assert.AreEqual(player.Died, player[PlayerStats.Died]);
        Assert.AreEqual(player.Skeets, player[PlayerStats.Skeets]);
        Assert.AreEqual(player.SkeetsHurt, player[PlayerStats.SkeetsHurt]);
        Assert.AreEqual(player.SkeetsMelee, player[PlayerStats.SkeetsMelee]);
        Assert.AreEqual(player.Levels, player[PlayerStats.Levels]);
        Assert.AreEqual(player.LevelsHurt, player[PlayerStats.LevelsHurt]);
        Assert.AreEqual(player.Pops, player[PlayerStats.Pops]);
        Assert.AreEqual(player.Crowns, player[PlayerStats.Crowns]);
        Assert.AreEqual(player.CrownsHurt, player[PlayerStats.CrownsHurt]);
        Assert.AreEqual(player.Shoves, player[PlayerStats.Shoves]);
        Assert.AreEqual(player.DeadStops, player[PlayerStats.DeadStops]);
        Assert.AreEqual(player.TongueCuts, player[PlayerStats.TongueCuts]);
        Assert.AreEqual(player.SelfClears, player[PlayerStats.SelfClears]);
        Assert.AreEqual(player.FallDamage, player[PlayerStats.FallDamage]);
        Assert.AreEqual(player.DmgTaken, player[PlayerStats.DmgTaken]);
        Assert.AreEqual(player.FfGiven, player[PlayerStats.FfGiven]);
        Assert.AreEqual(player.FfTaken, player[PlayerStats.FfTaken]);
        Assert.AreEqual(player.FfHits, player[PlayerStats.FfHits]);
        Assert.AreEqual(player.TankDamage, player[PlayerStats.TankDamage]);
        Assert.AreEqual(player.WitchDamage, player[PlayerStats.WitchDamage]);
        Assert.AreEqual(player.MeleesOnTank, player[PlayerStats.MeleesOnTank]);
        Assert.AreEqual(player.RockSkeets, player[PlayerStats.RockSkeets]);
        Assert.AreEqual(player.RockEats, player[PlayerStats.RockEats]);
        Assert.AreEqual(player.FfGivenPellet, player[PlayerStats.FfGivenPellet]);
        Assert.AreEqual(player.FfGivenBullet, player[PlayerStats.FfGivenBullet]);
        Assert.AreEqual(player.FfGivenSniper, player[PlayerStats.FfGivenSniper]);
        Assert.AreEqual(player.FfGivenMelee, player[PlayerStats.FfGivenMelee]);
        Assert.AreEqual(player.FfGivenFire, player[PlayerStats.FfGivenFire]);
        Assert.AreEqual(player.FfGivenIncap, player[PlayerStats.FfGivenIncap]);
        Assert.AreEqual(player.FfGivenOther, player[PlayerStats.FfGivenOther]);
        Assert.AreEqual(player.FfGivenSelf, player[PlayerStats.FfGivenSelf]);
        Assert.AreEqual(player.FfTakenPellet, player[PlayerStats.FfTakenPellet]);
        Assert.AreEqual(player.FfTakenBullet, player[PlayerStats.FfTakenBullet]);
        Assert.AreEqual(player.FfTakenSniper, player[PlayerStats.FfTakenSniper]);
        Assert.AreEqual(player.FfTakenMelee, player[PlayerStats.FfTakenMelee]);
        Assert.AreEqual(player.FfTakenFire, player[PlayerStats.FfTakenFire]);
        Assert.AreEqual(player.FfTakenIncap, player[PlayerStats.FfTakenIncap]);
        Assert.AreEqual(player.FfTakenOther, player[PlayerStats.FfTakenOther]);
        Assert.AreEqual(player.FfGivenTotal, player[PlayerStats.FfGivenTotal]);
        Assert.AreEqual(player.FfTakenTotal, player[PlayerStats.FfTakenTotal]);
        Assert.AreEqual(player.Clears, player[PlayerStats.Clears]);
        Assert.AreEqual(player.AvgClearTime, player[PlayerStats.AvgClearTime]);
        Assert.AreEqual(player.TimeStartPresent.ToUnixTimeSeconds(), player[PlayerStats.TimeStartPresent]);
        Assert.AreEqual(player.TimeStopPresent.ToUnixTimeSeconds(), player[PlayerStats.TimeStopPresent]);
        Assert.AreEqual(player.TimeStartAlive.ToUnixTimeSeconds(), player[PlayerStats.TimeStartAlive]);
        Assert.AreEqual(player.TimeStopAlive.ToUnixTimeSeconds(), player[PlayerStats.TimeStopAlive]);
        Assert.AreEqual(player.TimeStartUpright.ToUnixTimeSeconds(), player[PlayerStats.TimeStartUpright]);
        Assert.AreEqual(player.TimeStopUpright.ToUnixTimeSeconds(), player[PlayerStats.TimeStopUpright]);
    }
}